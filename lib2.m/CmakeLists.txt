cmake_minimum_required(VERSION 3.15.0)
project(lib2.m)

# compile definitions
add_library(lib2_obj OBJECT src/lib2help.cpp)
target_include_directories(lib2_obj PUBLIC include/)
target_include_directories(lib2_obj PRIVATE $<TARGET_PROPERTY:lib1_obj,INCLUDE_DIRECTORIES>)
target_compile_definitions(lib2_obj PRIVATE __LIB2)

# static lib for Link1st (resolve cyclic dep)
add_library(lib2_s STATIC $<TARGET_OBJECTS:lib2_obj>)
target_link_libraries(lib2_s PUBLIC lib1_s)
set_target_properties(lib2_s PROPERTIES STATIC_LIBRARY_OPTIONS /DEF)
set_target_properties(lib2_s PROPERTIES OUTPUT_NAME lib2)

# shared lib for link2nd (final dll)
add_library(lib2_d SHARED $<TARGET_OBJECTS:lib2_obj>)
target_include_directories(lib2_d PUBLIC include/)
target_link_libraries(lib2_d PRIVATE lib2_s)
set_target_properties(lib2_d PROPERTIES RUNTIME_OUTPUT_NAME lib2)


# install directives : where to put final files
add_library(lib2 ALIAS lib2_d) 
install(TARGETS lib2_d RUNTIME DESTINATION ${CMAKE_INSTALL_PREFIX}/bin)
install(TARGETS lib2_d LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)
install(FILES $<TARGET_PDB_FILE:lib2_d> DESTINATION ${CMAKE_INSTALL_PREFIX}/bin OPTIONAL)
