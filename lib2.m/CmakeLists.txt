cmake_minimum_required(VERSION 3.15.0)
project(lib2.m)

# compile definitions
add_library(lib2_obj OBJECT src/lib2help.cpp)
target_include_directories(lib2_obj PUBLIC include/)
target_include_directories(lib2_obj PRIVATE $<TARGET_PROPERTY:lib1_obj,INCLUDE_DIRECTORIES>)
target_compile_definitions(lib2_obj PRIVATE __LIB2)

# create importlib from obj
add_library(lib2_implib STATIC ../dummy.cpp)
target_include_directories(lib2_implib PUBLIC include/)
add_custom_command(TARGET lib2_implib POST_BUILD COMMAND lib /nologo /def $<TARGET_OBJECTS:lib2_obj> /OUT:lib2.lib)
set_target_properties(lib2_implib PROPERTIES ARCHIVE_OUTPUT_NAME lib2)

# shared lib
add_library(lib2_shr SHARED $<TARGET_OBJECTS:lib2_obj>)
target_include_directories(lib2_shr PUBLIC include/)
target_link_libraries(lib2_shr PRIVATE lib1_implib)
set_target_properties(lib2_shr PROPERTIES RUNTIME_OUTPUT_NAME lib2)

# install into correct folder
install(TARGETS lib2_implib ARCHIVE DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)
install(TARGETS lib2_shr    RUNTIME DESTINATION ${CMAKE_INSTALL_PREFIX}/bin)
